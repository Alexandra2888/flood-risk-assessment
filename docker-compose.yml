version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flood-risk-backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - PORT=8000
      - HOST=0.0.0.0
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
    networks:
      - flood-risk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flood-risk-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - flood-risk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  flood-risk-network:
    driver: bridge

volumes:
  backend_cache:
